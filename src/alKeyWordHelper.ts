export module ALKeywordHelper {

    export function isKeyWord(value: String): boolean {
        return getAllKeywordsLowerCased().indexOf(value.toLowerCase()) !== -1;
    }
    
    function getAllKeywordsLowerCased(): String[] {
        var lowerCasedNames = getAllKeywords().map(value => {
            return value.toLowerCase();
        });
        return lowerCasedNames;
    }
    
    function getAllKeywords(): String[] {
        let keywords: String[] = [
            "Action",
            "and",
            "AssertError",
            "BigText",
            "Blob",
            "begin",
            "case",
            "div",
            "do",
            "downto",
            "BigInteger",
            "Binary",
            "Boolean",
            "Codeunit",
            "Commit",
            "Confirm",
            "Count",
            "DateFormula",
            "Char",
            "Code",
            "CalcFields",
            "CalcSums",
            "codeunit",
            "Date",
            "DateTime",
            "Decimal",
            "Duration",
            "DateTime",
            "Dialog",
            "else",
            "end",
            "exit",
            "FieldCaption",
            "FieldRef",
            "File",
            "for",
            "Format",
            "Guid",
            "InStream",
            "Integer",
            "if",
            "in",
            "KeyRef",
            "mod",
            "OutStream",
            "Option",
            "of",
            "or",
            "procedure",
            "Page",
            "Record",
            "RecordId",
            "RecordRef",
            "Report",
            "repeat",
            "System",
            "TestField",
            "Text",
            "Time",
            "Validate",
            "Variant",
            "not",
            "TableFilter",
            "then",
            "to",
            "until",
            "while",
            "with",
            "with",
            "var",
            "temporary",
            "true",
            "false",
            "XmlPort",
            "TextConst",
            "Error",
            "Message",
            "SetRange",
            "SetFilter",
            "RunModal",
            "Run",
            "SetTableView",
            "field",
            "SetRecord",
            "ConvertStr",
            "CopyStr",
            "GetRecord",
            "LookupMode",
            "const",
            "Clear",
            "filter",
            "LowerCase",
            "StrSubstNo",
            "TextEncoding",
            "Enum",
            "Label",
            "Count",
            "StrLen",
            "sorting",
            "Next",
            "Evaluate",
            "SelectStr",
            "Editable",
            "FieldError",
            "Round",
            "GuiAllowed",
            "FindSet",
            "FindFirst",
            "FindLast",
            "extends",
            "Find",
            "IsEmpty",
            "Reset",
            "DeleteAll",
            "Insert",
            "HasValue",
            "Delete",
            "Init",
            "Get",
            "Skip",
            "GetFilters",
            "UseRequestPage",
            "Preview",
            "TableCaption",
            "record",
            "page",
            "pagecustomization",
            "grid",
            "profile",
            "pageextension",
            "tableextension",
            "table",
            "query",
            "report",
            "UserId",
            "Update",
            "where",
            "xmlport",
        ];
        
        return keywords;
    }
}